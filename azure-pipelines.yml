trigger:
- main

pr:
  branches:
    include:
    - '*'

stages:
- stage: Plan
  jobs:
  - job: terraformPlan
    pool:
      name: 'my-pool'
    steps:
    - task: TerraformInstaller@1
      inputs:
        terraformVersion: 'latest'
      displayName: 'Terraform install'
      condition: eq(variables['Build.Reason'], 'PullRequest')
    - task: TerraformTaskV4@4
      inputs:
        provider: 'aws'
        command: 'init'
        workingDirectory: '$(System.DefaultWorkingDirectory)/infrastructure-terraform'
        backendServiceAWS: 'aws_terraform'
        backendAWSBucketName: 'terraform-state-mina-lab'
        backendAWSKey: 'terraform.tfstate'
      displayName: 'Terraform Init'
      condition: eq(variables['Build.Reason'], 'PullRequest')
    - task: TerraformTaskV4@4
      inputs:
        provider: 'aws'
        command: 'plan'
        workingDirectory: '$(System.DefaultWorkingDirectory)/infrastructure-terraform'
        commandOptions: '-var-file=”dev.tfvars”'
        environmentServiceNameAWS: 'aws_terraform'
      displayName: 'Terraform Plan'
      condition: eq(variables['Build.Reason'], 'PullRequest')

- stage: Apply
  dependsOn: Plan
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
  jobs:
  - job: terraformApply
    pool:
      name: 'my-pool'
    steps:
    - task: TerraformInstaller@1
      inputs:
        terraformVersion: 'latest'
      displayName: 'Terraform install'
      condition: eq(variables['Build.Reason'], 'PullRequest')
    - task: TerraformTaskV4@4
      inputs:
        provider: 'aws'
        command: 'init'
        workingDirectory: '$(System.DefaultWorkingDirectory)/infrastructure-terraform'
        backendServiceAWS: 'aws_terraform'
        backendAWSBucketName: 'terraform-state-mina-lab'
        backendAWSKey: 'terraform.tfstate'
      displayName: 'Terraform Init'
      condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))

    - task: TerraformTaskV4@4
      inputs:
        provider: 'aws'
        command: 'apply'
        workingDirectory: '$(System.DefaultWorkingDirectory)/infrastructure-terraform'
        commandOptions: '-var-file=”dev.tfvars”'
        environmentServiceNameAWS: 'aws_terraform'
      displayName: 'Terraform Apply'
      condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))    
    